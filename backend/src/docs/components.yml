components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        username:
          type: string
        role:
          type: string
          enum: [user, admin]
      example:
        id: 5ebac534954b54139806c112
        email: fake@example.com
        username: fake name
        role: user

    Token:
      type: object
      properties:
        token:
          type: string
        expires:
          type: string
          format: date-time
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
        expires: 2020-05-12T16:18:04.793Z

    AuthTokens:
      type: object
      properties:
        access:
          $ref: '#/components/schemas/Token'
        refresh:
          $ref: '#/components/schemas/Token'

    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

    Journey:
      type: object
      required:
        - userId
        - startedAt
        - endedAt
        - updatedAt
        - status
        - updatedByUser
        - isAutomaticAdded
      properties:
        userId:
          type: string
        tripIds:
          type: array
          items:
            type: string
        title:
          type: string
        startedAt:
          type: number
        endedAt:
          type: number
        updatedAt:
          type: number
        status:
          type: string
        updatedByUser:
          type: boolean
        isAutomaticAdded:
          type: boolean
    Trip:
      type: object
      required:
        - userId
        - journeyId
        - startedAt
        - endedAt
        - updatedAt
        - status
      properties:
        userId:
          type: string
        journeyId:
          type: array
          items:
            type: string
        visitIds:
          type: array
          items:
            type: string
        title:
          type: string
        startedAt:
          type: number
        endedAt:
          type: number
        updatedAt:
          type: number
        status:
          type: boolean
        updatedByUser:
          type: boolean
        isAutomaticAdded:
          type: boolean
    Visit:
      type: object
      required:
        - userId
        - journeyId
        - tripId
        - locationId
        - startedAt
        - endedAt
        - updatedAt
        - status
        - updatedByUser
        - isAutomaticAdded
      properties:
        userId:
          type: string
        journeyId:
          type: string
        tripId:
          type: string
        locationId:
          type: string
        visitedTime:
          type: number
        title:
          type: string
        startedAt:
          type: number
        endedAt:
          type: number
        updatedAt:
          type: number
        status:
          type: string
        updatedByUser:
          type: boolean
        isAutomaticAdded:
          type: boolean
        pictures:
          type: array
          items:
            type: object
    Location:
      type: object
      required:
        - locationName
        - role
        - visitedTime
        - longitude
        - latitude
        - altitude
        - createdAt
        - status
        - updatedByUser
        - isAutomaticAdded
      properties:
        locationName:
          type: string
        role:
          type: string
        visitedTime:
          type: number
        longitude:
          type: number
        latitude:
          type: number
        altitude:
          type: number
        title:
          type: string
        createdAt:
          type: number
        status:
          type: string
        updatedByUser:
          type: boolean
        isAutomaticAdded:
          type: boolean
        pictures:
          type: array
          items:
            type: object
    Position:
      type: object
      required:
        - userId
        - longitude
        - latitude
        - altitude
        - timeAt
      properties:
        userId:
          type: string
        longitude:
          type: number
        latitude:
          type: number
        altitude:
          type: number
        timeAt:
          type: number
        locationid:
          type: string
  responses:
    DuplicateEmail:
      description: Email already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Email already taken
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 401
            message: Please authenticate
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 403
            message: Forbidden
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: Not found

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
